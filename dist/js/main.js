$(document).ready(function(){$(".bxslider").bxSlider({slideWidth:300,minSlides:3,maxSlides:3,moveSlides:3,slideMargin:10})}),new UISearch(document.getElementById("sb-search")),$(function(){new Masonry($(".grid").get()[0],{columnWidth:".element-item",itemSelector:".element-item"})}),jQuery(document).ready(function(){var e=800,a=500;jQuery(window).scroll(function(){jQuery(this).scrollTop()>e?jQuery(".back-to-top").fadeIn(a):jQuery(".back-to-top").fadeOut(a)}),jQuery(".back-to-top").click(function(e){return e.preventDefault(),jQuery("html, body").animate({scrollTop:0},a),!1})}),(new WOW).init(),$(function(){$("form[name='validForm']").validate({rules:{fullName:{required:!0,minlength:4,maxlength:16},email:{required:!0,email:!0},telephone:{required:!0,number:!0},date:{required:!0},bugdet:{required:!0,number:!0},message:{required:!0,minlength:4}},messages:{fullName:{required:"This field is required",minlength:"Name must be at least 4 characters",maxlength:"The maximum number of characters is 16"},email:{required:"This field is required",email:"Please enter a valid email address"},telephone:{required:"This field is required",number:"Please enter a valid number"},date:{required:"This field is required",date:"Please enter a valid date"},bugdet:{required:"This field is required",number:"Please enter a valid number"},message:{required:"This field is required",minlength:"Name must be at least 4 characters"}},submitHandler:function(){toastr.success("Your information are accepted"),$(".validForm").get(0).reset()}})}),$(function(){$("#date").datetimepicker()}),$(document).ready(function(){$("#data-table").DataTable({ajax:"/json/data.json",cols:[{data:"fullName"},{data:"company"},{data:"phone"},{data:"address"},{data:"email"}]})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
